@using Blazr.SiteBuilder
@using System.Diagnostics

@implements IContentComponent
@inject RouteProvider _routeProvider

<LayoutView Layout="@typeof(ArticleLayout)" />

<SectionContent SectionName="page-header-data">

    @SiteHtmlProvider.SeoHeaderHtml(this.PageData)
    @SiteHtmlProvider.OgHeaderHtml(new Tuple<ISiteData, IPageData>(SiteData.GetInstance(), PageData))

</SectionContent>

<SectionContent SectionName="side-bar">

    @SiteHtmlProvider.CategoryListHtml(_routeProvider)

</SectionContent>

<SectionContent SectionName="main-content">

    <div class="list-group">

    @foreach(var route in _routeProvider.RouteListForCategory(this.PageData.Category))
    {
        <a href="@($"{route.Route}.html")" class="list-group-item list-group-item-action">@route.PageData.Title</a>
    }

    </div>

</SectionContent>

@code {
    public abstract PageData PageData { get; }

    protected MarkupString SeoHeader = new MarkupString("<title>Title Goes Here!</title>");
    protected MarkupString OgHeader = new MarkupString(string.Empty);
    protected MarkupString TOC = new MarkupString("Loading");

    public async override Task SetParametersAsync(ParameterView parameters)
    {
        parameters.SetParameterProperties(this);

        this.GetContent();

        await base.SetParametersAsync(ParameterView.Empty);
    }

    protected void GetContent()
    {
         var seoHeader = BaseHtmlProvider.SeoHeaderHtml(this.PageData);
         this.SeoHeader = new MarkupString(seoHeader ?? string.Empty);

         var ogHeader = BaseHtmlProvider.OgHeaderHtml(this.PageData, SiteData.GetInstance());
        this.OgHeader = new MarkupString(ogHeader ?? string.Empty);
    }
}
