@using Blazr.SiteBuilder
@using System.Diagnostics
@implements IContentComponent
@inject RouteFactory _rootFactory

<LayoutView Layout="@typeof(ArticleLayout)" />

<SectionContent SectionName="page-header-data">

    @this.SeoHeader
    @this.OgHeader

</SectionContent>

<SectionContent SectionName="side-bar">

    <div class="list-group">

        @foreach (var category in _rootFactory.Categories)
        {
            <a href="@($"/{category}/")" class="list-group-item list-group-item-action">@category</a>
        }

    </div>

</SectionContent>

<SectionContent SectionName="main-content">

    <div class="list-group">

    @foreach(var route in _rootFactory.RouteList)
    {
        <a href="@($"{route.Route}.html")" class="list-group-item list-group-item-action">@route.PageData.Title</a>
    }

    </div>

</SectionContent>


@code {
    protected MarkupString SeoHeader = new MarkupString("<title>Title Goes Here!</title>");

    protected MarkupString OgHeader = new MarkupString(string.Empty);

    protected MarkupString TOC = new MarkupString("Loading");

    public virtual PageData PageData { get; protected set; } = new();

    public async override Task SetParametersAsync(ParameterView parameters)
    {
        parameters.SetParameterProperties(this);

        this.GetContent();

        await base.SetParametersAsync(ParameterView.Empty);
    }

    protected void GetContent()
    {
         var seoHeader = BaseHtmlProvider.SeoHeaderHtml(this.PageData);
         this.SeoHeader = new MarkupString(seoHeader ?? string.Empty);

         var ogHeader = BaseHtmlProvider.OgHeaderHtml(this.PageData, SiteData.GetInstance());
        this.OgHeader = new MarkupString(ogHeader ?? string.Empty);
    }
}
