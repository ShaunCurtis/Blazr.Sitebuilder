@using Blazr.SiteBuilder
@using Markdig
@using System.Diagnostics


<LayoutView Layout="@typeof(ArticleLayout)">
    <PageTitle>Home</PageTitle>
    <div>The main content goes here</div>

</LayoutView>

<SectionContent SectionName="side-bar">

    @this.ArticleInfo

    @this.TOC

</SectionContent>

<SectionContent SectionName="main-content">
    
    @this.ArticleHeader

    @this.ArticleContent

</SectionContent>


@code {
    protected MarkupString ArticleContent = new MarkupString("Loading");

    protected MarkupString TOC = new MarkupString("Loading");

    protected MarkupString ArticleInfo = new MarkupString("Loading");

    protected MarkupString ArticleHeader = new MarkupString("Loading");

    public virtual PageData PageData { get; protected set; } = new();

    public async override Task SetParametersAsync(ParameterView parameters)
    {
        parameters.SetParameterProperties(this);

        await this.GetContent();

        await base.SetParametersAsync(ParameterView.Empty);
    }


    protected async Task GetContent()
    {
        string mdFlePath = Environment.CurrentDirectory + PageData.MdFile;
        Debug.Assert(File.Exists(mdFlePath));

        string markdownText = await File.ReadAllTextAsync(mdFlePath);

        var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();

        var articleHtml = Markdown.ToHtml(markdownText, pipeline);
        this.ArticleContent = new MarkupString(articleHtml);

        var toc = TOCUtils.GetTOC(articleHtml);
        var tocContent = TOCBuilder.BuildTOC(toc);
        this.TOC = new MarkupString(tocContent ?? string.Empty);

        var headerHtml = ArticleHtmlProvider.BuildArticleTitleHtml(this.PageData);

        this.ArticleHeader = new MarkupString(headerHtml ?? string.Empty);

        var articleInfo = ArticleHtmlProvider.BuildArticleDatesHtml(this.PageData);
        this.ArticleInfo = new MarkupString(articleInfo ?? string.Empty);
    }
}
