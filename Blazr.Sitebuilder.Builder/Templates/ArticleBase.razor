@using Blazr.SiteBuilder
@using Blazr.Sitebuilder.Builder.Code
@using Markdig
@using System.Diagnostics


@code {
    protected MarkupString ArticleContent = new MarkupString("Loading");

    protected MarkupString TOC = new MarkupString("Loading");

    public virtual PageData PageData { get; protected set; } = new();

    public async override Task SetParametersAsync(ParameterView parameters)
    {
        parameters.SetParameterProperties(this);

        await this.GetContent();

        await base.SetParametersAsync(ParameterView.Empty);
    }


    protected async Task GetContent()
    {
        string mdFlePath = Environment.CurrentDirectory + PageData.MdFile;
        Debug.Assert(File.Exists(mdFlePath));

        string markdownText = await File.ReadAllTextAsync(mdFlePath);

        var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();

        var articleHtml = Markdown.ToHtml(markdownText, pipeline);
        this.ArticleContent = new MarkupString(articleHtml);

        var toc = TOCUtils.GetTOC(articleHtml);
        var tocContent = TOCBuilder.BuildTOC(toc);
        this.TOC = new MarkupString(tocContent ?? string.Empty);
    }
}
